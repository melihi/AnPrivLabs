/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.anprivlabs;

import com.anprivlabs.connection.ssh;
import com.anprivlabs.connection.sshConnection;
import com.anprivlabs.machine.machine;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import com.anprivlabs.sysinfo.sysinfo;
import com.anprivlabs.parse.ParseModule;
import com.anprivlabs.parse.copy;
import java.awt.Color;
import java.awt.Image;
import javax.swing.JProgressBar;
import com.anprivlabs.vmdeploy.vmDeploy;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Melih
 */
public class AnPrivLabs extends javax.swing.JFrame {

    /**
     * Creates new form AnPrivLabs
     */
    private sysinfo info = new sysinfo();
    private ParseModule parse;
    private copy copy = new copy();
    private vmDeploy deploy = new vmDeploy();
    private static HashMap<String, machine> MachineList = new HashMap<String, machine>();
    private static HashMap<String, String> MachineVbox = new HashMap<String, String>();

    private int refresh = 60000;
    private final ssh sh = new ssh();
    private final String imgSrc = System.getProperty("user.dir");
    private final String red = String.format("<html><img  src=\"%s\"/></html>", "file:///" + imgSrc + "\\Files\\img\\red.png");
    private final String green = String.format("<html><img   src=\"%s\"/></html>", "file:///" + imgSrc + "\\Files\\img\\green.png");
    private final String saved = String.format("<html><img   src=\"%s\"/></html>", "file:///" + imgSrc + "\\Files\\img\\saved.png");
    private final String aborted = String.format("<html><img   src=\"%s\"/></html>", "file:///" + imgSrc + "\\Files\\img\\aborted.png");
    private final Icon discIcon = new ImageIcon("Files/img/disconnect2.png");
    private final Icon conIcon = new ImageIcon("Files/img/connect2.png");
    private final Icon deploy2Icon = new ImageIcon("Files/img/deploy.gif");
    private final Icon deployIcon = new ImageIcon("Files/img/deploy.png");
    private int status = 0;
    private sshConnection con;

    public AnPrivLabs() {

        Image image = new ImageIcon("Files/img/icon.png").getImage();
        setIconImage(image);

        try {
            parse = new ParseModule();

        } catch (Exception ex) {
            ex.printStackTrace();
        }

        initComponents();
        refreshTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem11 = new javax.swing.JMenuItem();
        jMenuItem12 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem13 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jRadioButtonMenuItem1 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem2 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem3 = new javax.swing.JRadioButtonMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();
        jPopupMenu2 = new javax.swing.JPopupMenu();
        jMenuItem14 = new javax.swing.JMenuItem();
        jMenuItem15 = new javax.swing.JMenuItem();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jButton2 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jSpinner2 = new javax.swing.JSpinner();
        jSlider1 = new javax.swing.JSlider();
        jSlider2 = new javax.swing.JSlider();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jPanel6 = new javax.swing.JPanel();
        jTextField3 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jPasswordField1 = new javax.swing.JPasswordField();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jSpinner1 = new javax.swing.JSpinner();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jTextField5 = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();

        jPopupMenu1.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N

        jMenu3.setText("Start");

        jMenuItem11.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jMenuItem11.setText("Start with GUI");
        jMenuItem11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem11ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem11);
        Icon guiIcon = new ImageIcon("Files/img/gui.png");
        jMenuItem11.setIcon(guiIcon);

        jMenuItem12.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jMenuItem12.setText("Start headless");
        jMenuItem12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem12ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem12);
        Icon termIcon = new ImageIcon("Files/img/term.png");
        jMenuItem12.setIcon(termIcon);

        jPopupMenu1.add(jMenu3);
        Icon startIcon = new ImageIcon("Files/img/start.png");
        jMenu3.setIcon(startIcon);

        jMenuItem2.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jMenuItem2.setText("Restart");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem2);
        Icon restartIcon = new ImageIcon("Files/img/reload.png");
        jMenuItem2.setIcon(restartIcon);

        jMenu4.setText("Stop");

        jMenuItem1.setText("Power Off");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem1);
        Icon powerIcon = new ImageIcon("Files/img/power2.png");
        jMenuItem1.setIcon(powerIcon);

        jMenuItem13.setText("ACPI Shutdown");
        jMenuItem13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem13ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem13);
        Icon signalIcon = new ImageIcon("Files/img/signal.png");
        jMenuItem13.setIcon(signalIcon);

        jMenuItem3.setText("Save state");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem3);
        Icon saveIcon = new ImageIcon("Files/img/save.png");
        jMenuItem3.setIcon(saveIcon);

        jPopupMenu1.add(jMenu4);
        Icon stopIcon = new ImageIcon("Files/img/stop.png");
        jMenu4.setIcon(stopIcon);

        jMenu1.setText("Copy");

        jMenuItem4.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jMenuItem4.setText("Os");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);
        Icon osIcon = new ImageIcon("Files/img/os.png");
        jMenuItem4.setIcon(osIcon);

        jMenuItem5.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jMenuItem5.setText("Vm Name");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem5);
        Icon vmNametIcon = new ImageIcon("Files/img/vmname.png");
        jMenuItem5.setIcon(vmNametIcon);

        jMenuItem6.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jMenuItem6.setText("UUID");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem6);
        Icon idIcon = new ImageIcon("Files/img/id.png");
        jMenuItem6.setIcon(idIcon);

        jMenuItem7.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jMenuItem7.setText("Version");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem7);
        Icon versionIcon = new ImageIcon("Files/img/version.png");
        jMenuItem7.setIcon(versionIcon);

        jMenuItem8.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jMenuItem8.setText("Mac");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem8);
        Icon macIcon = new ImageIcon("Files/img/mac.png");
        jMenuItem8.setIcon(macIcon);

        jMenuItem9.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jMenuItem9.setText("Ip");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem9);
        Icon ipIcon = new ImageIcon("Files/img/ip.png");
        jMenuItem9.setIcon(ipIcon);

        jPopupMenu1.add(jMenu1);
        Icon copyIcon = new ImageIcon("Files/img/copy.png");
        jMenu1.setIcon(copyIcon);

        jMenu2.setText("Refresh");

        jRadioButtonMenuItem1.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jRadioButtonMenuItem1.setSelected(true);
        jRadioButtonMenuItem1.setText("Slow");
        jRadioButtonMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jRadioButtonMenuItem1);

        jRadioButtonMenuItem2.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jRadioButtonMenuItem2.setText("Normal");
        jRadioButtonMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jRadioButtonMenuItem2);

        jRadioButtonMenuItem3.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jRadioButtonMenuItem3.setText("Fast");
        jRadioButtonMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem3ActionPerformed(evt);
            }
        });
        jMenu2.add(jRadioButtonMenuItem3);

        jPopupMenu1.add(jMenu2);
        ButtonGroup bg=new ButtonGroup();
        bg.add(jRadioButtonMenuItem1);
        bg.add(jRadioButtonMenuItem2);
        bg.add(jRadioButtonMenuItem3);
        Icon refreshIcon = new ImageIcon("Files/img/restart.png");
        jMenu2.setIcon(refreshIcon);

        jMenuItem10.setText("Details");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem10);
        Icon detailsIcon = new ImageIcon("Files/img/details.png");
        jMenuItem10.setIcon(detailsIcon);

        jMenuItem14.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jMenuItem14.setText("Clear");
        jMenuItem14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem14ActionPerformed(evt);
            }
        });
        jPopupMenu2.add(jMenuItem14);

        jMenuItem15.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jMenuItem15.setText("Copy All");
        jMenuItem15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem15ActionPerformed(evt);
            }
        });
        jPopupMenu2.add(jMenuItem15);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("AnPrivLabs - ");

        jTabbedPane1.setFont(new java.awt.Font("Microsoft JhengHei", 0, 13)); // NOI18N

        jPanel1.setBackground(new java.awt.Color(18, 34, 46));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Linux", "Windows", "VulnHub", "WordPress", "Joomla", "RCE", "Command Injection", "XSS", "SQLi", "CSRF", "LFI", "RFI", "XXE" }));
        jComboBox1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportView(jList1);

        jButton2.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jButton2.setText("Deploy VM");
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Ram");

        jLabel5.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Cpu");

        jSpinner2.setModel(new javax.swing.SpinnerNumberModel(0, 0, (int)info.getTotalRam(), 1));
        jSpinner2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner2StateChanged(evt);
            }
        });

        jSlider1.setForeground(new java.awt.Color(255, 255, 255));
        jSlider1.setMajorTickSpacing(1024);
        jSlider1.setMaximum((int)info.getTotalRam());
        jSlider1.setMinorTickSpacing(512);
        jSlider1.setPaintLabels(true);
        jSlider1.setPaintTicks(true);
        jSlider1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jSlider1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider1StateChanged(evt);
            }
        });

        jSlider2.setForeground(new java.awt.Color(255, 255, 255));
        jSlider2.setMajorTickSpacing(1);
        jSlider2.setMaximum(info.getCores());
        jSlider2.setMinimum(1);
        jSlider2.setMinorTickSpacing(1);
        jSlider2.setPaintLabels(true);
        jSlider2.setPaintTicks(true);
        jSlider2.setValue(1);
        jSlider2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jLabel6.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Select Vulnerability");

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Queue"));
        jPanel6.setMaximumSize(new java.awt.Dimension(228, 422));
        jPanel6.setLayout(new javax.swing.BoxLayout(jPanel6, javax.swing.BoxLayout.Y_AXIS));
        jScrollPane3.setViewportView(jPanel6);

        jLabel8.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("VmName");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(jLabel5))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel8))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jTextField3, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.Alignment.LEADING, 0, 250, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jSlider2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jSlider1, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 494, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jScrollPane3))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 308, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jSlider2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(36, 36, 36)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 228, Short.MAX_VALUE))
        );

        //jComboBox1.setModel(new DefaultComboBoxModel(parse.vulnTypes()));
        jButton2.setIcon(deployIcon);
        jSpinner2.setValue(2048);
        jScrollPane3.setViewportView(jPanel6);

        jTabbedPane1.addTab("Control Center", jPanel1);

        jTable1.setBackground(new java.awt.Color(18, 34, 46));
        jTable1.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Linux", null, null, " 5.10.33-1-lts", "080027D3B675", " 192.168.1.23", null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "OS", "Vm Name", "UUID", "Version", "Mac", "IP", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jTable1.setInheritsPopupMenu(true);
        jTable1.setRowHeight(50);
        jTable1.setShowGrid(false);
        jTable1.setShowHorizontalLines(true);
        jScrollPane1.setViewportView(jTable1);
        jTable1.setComponentPopupMenu(jPopupMenu1);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.setBackground(new Color(38, 50, 56));
        jTable1.setForeground(new Color(255, 255, 255));
        jTable1.setGridColor(new Color(255, 255, 255));
        jTable1.setSelectionBackground(new Color(209, 50, 66));

        jTable1.getColumnModel().getColumn(0).setResizable(false);
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(25);
        jTable1.getColumnModel().getColumn(1).setResizable(false);
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(50);
        jTable1.getColumnModel().getColumn(2).setResizable(false);
        jTable1.getColumnModel().getColumn(2).setPreferredWidth(150);
        jTable1.getColumnModel().getColumn(3).setResizable(false);
        jTable1.getColumnModel().getColumn(3).setPreferredWidth(20);
        jTable1.getColumnModel().getColumn(4).setResizable(false);
        jTable1.getColumnModel().getColumn(4).setPreferredWidth(30);
        jTable1.getColumnModel().getColumn(5).setResizable(false);
        jTable1.getColumnModel().getColumn(5).setPreferredWidth(30);
        jTable1.getColumnModel().getColumn(6).setResizable(false);
        jTable1.getColumnModel().getColumn(6).setPreferredWidth(0);

        jTabbedPane1.addTab("Manage VMs", jScrollPane1);

        jTextArea1.setBackground(new java.awt.Color(18, 34, 46));
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jTextArea1.setForeground(new java.awt.Color(117, 206, 183));
        jTextArea1.setRows(5);
        jScrollPane5.setViewportView(jTextArea1);

        jTabbedPane1.addTab("VM Details", jScrollPane5);

        jPanel2.setBackground(new java.awt.Color(18, 34, 46));
        jPanel2.setFont(new java.awt.Font("Microsoft JhengHei", 0, 12)); // NOI18N

        jPanel3.setBackground(new java.awt.Color(18, 34, 46));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "C&C VM SSH CONNECTION", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("sansserif", 1, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel3.setForeground(new java.awt.Color(255, 255, 255));

        jButton1.setText("Command center SSH connection");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        jButton1.setIconTextGap(15);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPasswordField1.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jPasswordField1.setText("sifre0909");

        jLabel2.setBackground(new java.awt.Color(0, 0, 0));
        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("SSH port");

        jTextField1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTextField1.setText("192.168.1.14");

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Ip address");

        jLabel12.setBackground(new java.awt.Color(0, 0, 0));
        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Password");

        jLabel13.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        jLabel13.setForeground(java.awt.Color.red);
        jLabel13.setText("Status : Not Connected");

        jLabel14.setBackground(new java.awt.Color(0, 0, 0));
        jLabel14.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Username");

        jTextField4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTextField4.setText("aeruginosa");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPasswordField1)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(jLabel12)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 24, Short.MAX_VALUE))
                    .addComponent(jTextField1)
                    .addComponent(jTextField4)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        Icon sshIcon = new ImageIcon("Files/img/ssh.png");
        jButton1.setIcon(sshIcon);
        jSpinner1.setValue(22);
        jLabel13.setIcon(discIcon);

        jPanel5.setBackground(new java.awt.Color(18, 34, 46));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Required", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("sansserif", 1, 12), new java.awt.Color(255, 255, 255))); // NOI18N

        jLabel3.setBackground(new java.awt.Color(18, 34, 46));
        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Virtualbox Path");

        jButton3.setText("Select");
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTextField2.setEditable(false);
        jTextField2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Microsoft JhengHei", 3, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("?");
        jLabel7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jTextField2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(1, 1, 1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTextField2.setText(parse.getSettings("VirtualBoxPath"));

        jTextArea2.setEditable(false);
        jTextArea2.setBackground(new java.awt.Color(18, 34, 46));
        jTextArea2.setColumns(20);
        jTextArea2.setFont(new java.awt.Font("Source Code Pro Medium", 0, 14)); // NOI18N
        jTextArea2.setForeground(new java.awt.Color(117, 206, 183));
        jTextArea2.setRows(5);
        jScrollPane4.setViewportView(jTextArea2);
        jTextArea2.setComponentPopupMenu(jPopupMenu2);

        jButton5.setText("Run");
        jButton5.setEnabled(false);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(12, 12, 12)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jTextField5, javax.swing.GroupLayout.DEFAULT_SIZE, 657, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE))
                    .addComponent(jScrollPane4)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 475, Short.MAX_VALUE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5)))
        );

        jTabbedPane1.addTab("Settings", jPanel2);

        jPanel4.setBackground(new java.awt.Color(18, 34, 46));
        jPanel4.setLayout(new javax.swing.BoxLayout(jPanel4, javax.swing.BoxLayout.Y_AXIS));

        jLabel11.setBackground(new java.awt.Color(102, 51, 255));
        jLabel11.setForeground(new java.awt.Color(153, 0, 153));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jPanel4.add(jLabel11);
        Icon bannerIcon = new ImageIcon("Files/img/banner.png");
        jLabel11.setIcon(bannerIcon);

        jLabel9.setFont(new java.awt.Font("JetBrains Mono", 0, 13)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(117, 206, 183));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("<html> <center>AnPrivLab automatically deploy vulnerable virtual systems .</center> \n<center> AnPrivLabs creates cyber labs for you .  AnPrivLabs can run VulnHub machines automatically . \n<center>  AnprivLabs gets power from the Ansible.</center>  </html>");
        jLabel9.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jPanel4.add(jLabel9);

        jLabel10.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(117, 206, 183));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Eren Meriç & Melih İşbilen");
        jPanel4.add(jLabel10);

        jTabbedPane1.addTab("About", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if (jButton3.getText() == "Select") {
            jTextField2.setEditable(true);
            jButton3.setText("Save");
            jButton3.setBackground(Color.GREEN);
        } else {
            jTextField2.setEditable(false);
            jButton3.setText("Select");
            jButton3.setBackground(Color.lightGray);
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jSlider1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider1StateChanged
        // TODO add your handling code here:
        jSpinner2.setValue(jSlider1.getValue());
    }//GEN-LAST:event_jSlider1StateChanged

    private void jSpinner2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner2StateChanged
        // TODO add your handling code here:
        jSlider1.setValue((int) jSpinner2.getValue());
    }//GEN-LAST:event_jSpinner2StateChanged

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if (jList1.getSelectedValue() != null && jTextField3.getText().length() >= 3 && jLabel13.getText().equals("Status : Connected")) {
            jButton2.setEnabled(false);
            System.out.println(jList1.getSelectedValue().toString());
            Thread dep = new Thread(new Runnable() {
                @Override
                public void run() {
                    jButton2.setIcon(deploy2Icon);
                    machine vm = new machine(jList1.getSelectedValue().toString(), jTextField3.getText(), jComboBox1.getSelectedItem().toString(), jSlider2.getValue(), jSlider1.getValue());
                    // String vm, String vmId,String vmName ,String VulnType, String cpu, String ram, int type
                    if (!deploy.startVm(vm)) {
                        alertFunc("Sorry . . .", "Sorry something went wrong . Please  check vm username , virtualbox path and ssh connection .");
                    } else {
                        alertFunc("Success", vm.getVm() + " " + vm.getVmName() + " " + vm.getVmUUID() + " Deployed .");
                        MachineList.put(vm.getVmName(), vm);
                        JProgressBar progress = new JProgressBar();
                        progress.setStringPainted(true);

                        progress.setString(jList1.getSelectedValue().toString() + " - " + vm.getVmName() + " - " + vm.getVmUUID() + " - " + jSlider1.getValue() + " MB - " + jSlider2.getValue() + " Thread");
                        progress.setValue(100);
                        jPanel6.add(progress);
                        jPanel6.revalidate();
                        jPanel6.repaint();

                    }
                    if (vm.getStatus() == 1) {
                        MachineList.put(vm.getVmName(), vm);
                    }
                    jButton2.setEnabled(true);
                    jButton2.setIcon(deployIcon);
                }
            });
            dep.start();

        } else {

        }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        // TODO add your handling code here:

        jList1.setListData(parse.returnVulns(jComboBox1.getSelectedItem().toString()));
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "VirtualBox and AnPrivLabs have to be at the same disk partition .", "Directory Format", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jLabel7MouseClicked

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jRadioButtonMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem2ActionPerformed
        // TODO add your handling code here:
        refresh = 35000;
    }//GEN-LAST:event_jRadioButtonMenuItem2ActionPerformed

    private void jRadioButtonMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem1ActionPerformed
        // TODO add your handling code here:
        refresh = 60000;
    }//GEN-LAST:event_jRadioButtonMenuItem1ActionPerformed

    private void jRadioButtonMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem3ActionPerformed
        // TODO add your handling code here:
        refresh = 5000;
    }//GEN-LAST:event_jRadioButtonMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        if (!jTable1.getSelectionModel().isSelectionEmpty()) {
            copy.copyClip(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());
        }
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // TODO add your handling code here:
        if (!jTable1.getSelectionModel().isSelectionEmpty()) {
            copy.copyClip(jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString());
        }
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        // TODO add your handling code here:
        if (!jTable1.getSelectionModel().isSelectionEmpty()) {
            copy.copyClip(jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString());
        }
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        // TODO add your handling code here:
        if (!jTable1.getSelectionModel().isSelectionEmpty()) {
            copy.copyClip(jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString());
        }
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        // TODO add your handling code here:
        if (!jTable1.getSelectionModel().isSelectionEmpty()) {
            copy.copyClip(jTable1.getValueAt(jTable1.getSelectedRow(), 4).toString());
        }
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        // TODO add your handling code here:
        if (!jTable1.getSelectionModel().isSelectionEmpty()) {
            copy.copyClip(jTable1.getValueAt(jTable1.getSelectedRow(), 5).toString());
        }
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        // TODO add your handling code here:
        if (!jTable1.getSelectionModel().isSelectionEmpty()) {
            jTextArea1.setText(deploy.vminfo(jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString()));
            jTabbedPane1.setSelectedIndex(2);
        }
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void jMenuItem11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem11ActionPerformed
        // TODO add your handling code here:

        Thread thr = new Thread(new Runnable() {
            @Override
            public void run() {

                jTable1.setEnabled(false);
                if (!jTable1.getSelectionModel().isSelectionEmpty() && !jTable1.getValueAt(jTable1.getSelectedRow(), 6).toString().contains("green")) {
                    if (deploy.RunVm(jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString(), "gui")) {
                        alertFunc("Virtual Machine Running", "Success");

                    } else {
                        alertFunc("Virtual Machine Issue", "Sorry something went wrong .");
                    }

                } else {
                    alertFunc("Virtual Machine Running", "Virtual machine already running !");
                }
                jTable1.setEnabled(true);
            }
        });
        thr.start();

    }//GEN-LAST:event_jMenuItem11ActionPerformed

    private void jMenuItem12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem12ActionPerformed
        // TODO add your handling code here:

        Thread thr = new Thread(new Runnable() {
            @Override
            public void run() {
                jTable1.setEnabled(false);
                if (!jTable1.getSelectionModel().isSelectionEmpty() && !jTable1.getValueAt(jTable1.getSelectedRow(), 6).toString().contains("green")) {
                    if (deploy.RunVm(jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString(), "headless")) {
                        alertFunc("Virtual Machine Running", "Success");
                    } else {
                        alertFunc("Virtual Machine Issue", "Sorry something went wrong .");
                    }
                } else {
                    alertFunc("Virtual Machine Running", "Virtual machine already running !");
                }
                jTable1.setEnabled(true);
            }
        });
        thr.start();
    }//GEN-LAST:event_jMenuItem12ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        Thread thr = new Thread(new Runnable() {
            @Override
            public void run() {

                if (!jTable1.getSelectionModel().isSelectionEmpty()) {
                    if (deploy.StopVm(jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString(), "poweroff")) {
                        alertFunc("Virtual Machine poweroff command sended .", "Success");
                    }
                }
            }
        });
        thr.start();

    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem13ActionPerformed
        // TODO add your handling code here:

        Thread thr = new Thread(new Runnable() {
            @Override
            public void run() {

                if (!jTable1.getSelectionModel().isSelectionEmpty()) {
                    if (deploy.StopVm(jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString(), "acpipowerbutton")) {
                        alertFunc("Virtual Machine poweroff command sended .", "Success");

                    }
                }

            }
        });
        thr.start();
    }//GEN-LAST:event_jMenuItem13ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        Thread thr = new Thread(new Runnable() {
            @Override
            public void run() {

                if (!jTable1.getSelectionModel().isSelectionEmpty()) {
                    if (deploy.StopVm(jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString(), "savestate")) {
                        alertFunc("Virtual Machine poweroff command sended .", "Success");

                    }
                }

            }
        });
        thr.start();
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        con = new sshConnection(jTextField4.getText(), jPasswordField1.getPassword(), jTextField1.getText(), (Integer) jSpinner1.getValue());

        jButton1.setEnabled(false);
        Thread thr = new Thread(new Runnable() {
            @Override
            public void run() {
                try {
                    sh.startSSH(con);
                    if (sh.checkCon()) {
                        alertFunc("SSH connection established !", "SSH Connected");
                        if (status != 1) {
                            sshChecker();
                            status = 1;
                        }
                    } else {
                        alertFunc("SSH connection failed !", "SSH failed");
                    }
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
                jButton1.setEnabled(true);
            }
        });
        thr.start();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        Thread thr = new Thread(new Runnable() {
            @Override
            public void run() {
                jButton5.setEnabled(false);
                if (jTextField5.getText() != "" && jTextField5.getText() != null && sh.getSession().isConnected()) {
                    jTextArea2.append(sh.getCon().getUsername() + " $ \n " + sh.runCom(jTextField5.getText()) + "\n");
                    jButton5.setEnabled(true);
                }
                jButton5.setEnabled(true);
            }
        });
        thr.start();

    }//GEN-LAST:event_jButton5ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        Thread thr = new Thread(new Runnable() {
            @Override
            public void run() {

                if (!jTable1.getSelectionModel().isSelectionEmpty() && jTable1.getValueAt(jTable1.getSelectedRow(), 6).toString().contains("green")) {
                    if (deploy.StopVm(jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString(), "restart")) {
                        alertFunc("Virtual Machine poweroff command sended .", "Success");

                    }
                }

            }
        });
        thr.start();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem15ActionPerformed
        // TODO add your handling code here:
        copy.copyClip(jTextArea2.getText());
    }//GEN-LAST:event_jMenuItem15ActionPerformed

    private void jMenuItem14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem14ActionPerformed
        // TODO add your handling code here:
        jTextArea2.setText("");
    }//GEN-LAST:event_jMenuItem14ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AnPrivLabs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AnPrivLabs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AnPrivLabs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AnPrivLabs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AnPrivLabs().setVisible(true);
            }
        });

    }

    public void alertFunc(String title, String mes) {
        SwingUtilities.invokeLater(new Runnable() {
            public void run() {

                JOptionPane.showMessageDialog(null, mes, title, JOptionPane.INFORMATION_MESSAGE);
            }
        });

    }

    private void refreshTable() {

        Thread table = new Thread(new Runnable() {
            @Override
            public void run() {
                DefaultTableModel tableModel = (DefaultTableModel) jTable1.getModel();
                for (;;) {
                    MachineVbox.clear();
                    ArrayList<String> data = deploy.listAllVms();

                    for (int i = 0; i < data.size(); i++) {

                        MachineVbox.put(data.get(i), deploy.vmData(data.get(i)));

                    }
                    System.out.println(data);
                    System.out.println(MachineVbox.entrySet());
                    tableModel.setRowCount(0);
                    for (String entry : MachineVbox.keySet()) {

                        String[] elements = MachineVbox.get(entry).split(";");

                        if (elements[6].contentEquals("POWERED OFF")) {
                            tableModel.insertRow(tableModel.getRowCount(), new Object[]{elements[0], elements[1], elements[2], elements[3], elements[4], elements[5], red});
                        } else if (elements[6].contentEquals("SAVED")) {
                            tableModel.insertRow(tableModel.getRowCount(), new Object[]{elements[0], elements[1], elements[2], elements[3], elements[4], elements[5], saved});
                        } else if (elements[6].contentEquals("ABORTED")) {
                            tableModel.insertRow(tableModel.getRowCount(), new Object[]{elements[0], elements[1], elements[2], elements[3], elements[4], elements[5], aborted});
                        } else if (elements[6].contentEquals("RUNNING")) {
                            tableModel.insertRow(tableModel.getRowCount(), new Object[]{elements[0], elements[1], elements[2], elements[3], elements[4], elements[5], green});
                        } else if (elements[0].contains("VBoxManage.exe: error:")) {
                            //tableModel.insertRow(tableModel.getRowCount(), new Object[]{elements[0], elements[1], elements[2], elements[3], elements[4], elements[5], red});

                        }
                    }

                    try {
                        Thread.currentThread().sleep(refresh);
                    } catch (Exception e) {
                    }

                }

            }
        });
        table.start();
    }

    private void sshChecker() {
        Thread thr = new Thread(new Runnable() {
            @Override
            public void run() {
                for (;;) {
                    System.out.println("sshcehcker working");
                    if (!sh.checkCon()) {
                        try {
                            alertFunc("SSH disconnected please reconnect ! ", "SSH Disconnectected !");

                            jLabel13.setIcon(discIcon);
                            jLabel13.setForeground(Color.RED);
                            jButton5.setEnabled(false);
                            jLabel13.setText("Status : Disconnected");
                            status = 0;
                            Thread.currentThread().join();
                        } catch (InterruptedException ex) {

                        }
                    } else {
                        jLabel13.setIcon(conIcon);
                        jLabel13.setText("Status : Connected");
                        jLabel13.setForeground(new Color(117, 206, 183));
                        jButton5.setEnabled(true);

                    }

                    try {
                        Thread.currentThread().sleep(15000);
                    } catch (Exception e) {
                    }
                }
            }

        });
        thr.start();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jList1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem13;
    private javax.swing.JMenuItem jMenuItem14;
    private javax.swing.JMenuItem jMenuItem15;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JPopupMenu jPopupMenu2;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem1;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem2;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JSlider jSlider2;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JSpinner jSpinner2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    // End of variables declaration//GEN-END:variables
}
